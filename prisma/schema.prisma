generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root@localhost:3308/jcrm"
}

model Register {
  id                Int           @id @default(autoincrement())
  name              String?       @db.VarChar(255)
  email             String?       @unique(map: "email") @db.VarChar(255)
  phone             String?       @db.VarChar(20)
  address           String?       @db.Text
  city              String?       @db.VarChar(100)
  state             String?       @db.VarChar(100)
  qualification     String?       @db.VarChar(255)
  university        String?       @db.VarChar(255)
  graduationYear    Int?          @db.Year
  skills            String?       @db.Text
  experience        String?       @db.Text
  availability      String?       @db.VarChar(50)
  preferredLocation String?       @db.VarChar(255)
  linkedinProfile   String?       @db.VarChar(255)
  githubProfile     String?       @db.VarChar(255)
  resume            String?       @db.LongText
  profilePhoto      String?       @db.LongText
  portfolio         String?       @db.VarChar(255)
  certificates      String?       @db.LongText
  gender            String        @db.Text
  courseType        String?       @db.VarChar(100)
  additionalInfo    String?       @db.Text
  reference         String?       @db.Text
  professionalRole  String?       @db.VarChar(255)
  created_at        DateTime      @default(now()) @db.Timestamp(0)
  updated_at        DateTime      @default(now()) @db.Timestamp(0)
  password String @default("")
  userType String @default("it")

  access            Int           @default(0)
    bookings  BookSession[]  @relation("RegisterToBookSession")
}

model BookSession {
  id         Int      @id @default(autoincrement()) // Auto-incremented ID
  name       String   // Name of the person booking the session
  email      String   // Email of the person
  phone      String   // Phone number
  day        String   // The day of the session
  timeSlot   String   // The time slot for the session
  userId     String   // User ID referencing the Register model
  createdAt  DateTime @default(now()) // Automatically sets the current date-time on creation

  registerId Int  // Foreign key for the relationship
   register   Register  @relation("RegisterToBookSession", fields: [registerId], references: [id])
}



model registrations {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  email      String   @db.VarChar(255)
  phone      String   @db.VarChar(20)
  address    String   @db.Text
  city       String   @db.VarChar(100)
  state      String   @db.VarChar(100)
  aadhar     String?  @db.VarChar(255)
  marksheets String?  @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model users {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  email      String   @unique(map: "email") @db.VarChar(100)
  password   String   @db.VarChar(255)
  userType   String   @default("admin")
  created_at DateTime @default(now()) @db.Timestamp(0)
}

enum register_gender {
  Male
  Female
  Other
}
